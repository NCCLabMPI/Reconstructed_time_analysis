ggplot(r2s_data, aes(x = SOA, y = mean, fill = factor(SOA))) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = 20, position = position_dodge(0.9)) +
facet_grid(. ~ SOA_lock)+
labs(title = "(R"^2~") of RTaud and ITvis",
x = "Column",
y = "Mean (R"^2~")",
fill = "SOA [ms]") +
scale_fill_manual(values = c("pink","lightblue", 'violet'), name = 'SOA', labels=c('0', '232', '466'))+
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(linetype = "solid"),
panel.background = element_blank())
# Create the bar plot
ggplot(r2s_data, aes(x = SOA, y = mean, fill = factor(SOA))) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = 20, position = position_dodge(0.9)) +
facet_grid(. ~ SOA_lock)+
labs(title = "R"^2~" of RTaud and ITvis",
x = "Column",
y = "Mean R"^2~"",
fill = "SOA [ms]") +
scale_fill_manual(values = c("pink","lightblue", 'violet'), name = 'SOA', labels=c('0', '232', '466'))+
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(linetype = "solid"),
panel.background = element_blank())
# Create the bar plot
ggplot(r2s_data, aes(x = SOA, y = mean, fill = factor(SOA))) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = 20, position = position_dodge(0.9)) +
facet_grid(. ~ SOA_lock)+
labs(title = "R"^2~"of RTaud and ITvis",
x = "Column",
y = "Mean R"^2~"",
fill = "SOA [ms]") +
scale_fill_manual(values = c("pink","lightblue", 'lightgreen'), name = 'SOA', labels=c('0', '232', '466'))+
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(linetype = "solid"),
panel.background = element_blank())
# Create the bar plot
ggplot(r2s_data, aes(x = SOA, y = mean, fill = factor(SOA))) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = 20, position = position_dodge(0.9)) +
facet_grid(. ~ SOA_lock)+
labs(title = "R"^2~"of RTaud and ITvis",
x = "SOA",
y = "Mean R"^2~"") +
scale_fill_manual(values = c("pink","lightblue", 'lightgreen'), name = 'SOA [ms]', labels=c('0', '232', '466'))+
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(linetype = "solid"),
panel.background = element_blank())
# Create the bar plot
ggplot(r2s_data, aes(x = SOA, y = mean, fill = factor(SOA))) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = 20, position = position_dodge(0.9)) +
facet_grid(. ~ SOA_lock)+
labs(title = "R"^2~"of RTaud and ITvis",
x = "SOA",
y = "Mean R"^2~"") +
scale_fill_manual(values = c("pink","lightblue", 'lightgreen'), name = 'SOA [ms]', labels=c('0', '232', '466'))+
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(linetype = "solid"),
panel.background = element_blank())
# Create the bar plot
ggplot(r2s_data, aes(x = SOA, y = mean, fill = factor(SOA))) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = 20, position = position_dodge(0.9)) +
facet_grid(. ~ SOA_lock)+
labs(title = "R"^2~"of RTaud ~ ITvis",
x = "SOA",
y = "Mean R"^2~"") +
scale_fill_manual(values = c("pink","lightblue", 'lightgreen'), name = 'SOA [ms]', labels=c('0', '232', '466'))+
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(linetype = "solid"),
panel.background = element_blank())
# Create the bar plot
ggplot(r2s_data, aes(x = SOA, y = mean, fill = factor(SOA))) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = 20, position = position_dodge(0.9)) +
facet_grid(. ~ SOA_lock)+
labs(title = "R"^2~"of RTaud ~ ITvis",
x = "SOA",
y = "Mean R"^2~"") +
scale_fill_manual(values = c("pink","lightblue", 'lightgreen'), name = 'SOA [ms]', labels=c('0', '232', '466'))+
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(linetype = "solid"),
panel.background = element_blank())
# Create the bar plot
ggplot(r2s_data, aes(x = factor(SOA), y = mean, fill = factor(SOA))) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = 20, position = position_dodge(0.9)) +
facet_grid(. ~ SOA_lock)+
labs(title = "R"^2~"of RTaud ~ ITvis",
x = "SOA",
y = "Mean R"^2~"") +
scale_fill_manual(values = c("pink","lightblue", 'lightgreen'), name = 'SOA [ms]', labels=c('0', '232', '466'))+
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(linetype = "solid"),
panel.background = element_blank())
# Create the bar plot
ggplot(r2s_data, aes(x = factor(SOA), y = mean, fill = factor(SOA))) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = 0.2, position = position_dodge(0.9)) +
facet_grid(. ~ SOA_lock)+
labs(title = "R"^2~"of RTaud ~ ITvis",
x = "SOA",
y = "Mean R"^2~"") +
scale_fill_manual(values = c("pink","lightblue", 'lightgreen'), name = 'SOA [ms]', labels=c('0', '232', '466'))+
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(linetype = "solid"),
panel.background = element_blank())
# Create the bar plot
ggplot(r2s_data, aes(x = factor(SOA), y = mean,color = "black", fill = factor(SOA))) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = 0.2, position = position_dodge(0.9)) +
facet_grid(. ~ SOA_lock)+
labs(title = "R"^2~"of RTaud ~ ITvis",
x = "SOA",
y = "Mean R"^2~"") +
scale_fill_manual(values = c("pink","lightblue", 'lightgreen'), name = 'SOA [ms]', labels=c('0', '232', '466'))+
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(linetype = "solid"),
panel.background = element_blank())
# Create the bar plot
ggplot(r2s_data, aes(x = factor(SOA), y = mean, color = "white", fill = factor(SOA))) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = 0.2, position = position_dodge(0.9)) +
facet_grid(. ~ SOA_lock)+
labs(title = "R"^2~"of RTaud ~ ITvis",
x = "SOA",
y = "Mean R"^2~"") +
scale_fill_manual(values = c("pink","lightblue", 'lightgreen'), name = 'SOA [ms]', labels=c('0', '232', '466'))+
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(linetype = "solid"),
panel.background = element_blank())
ggplot(r2s_data, aes(x = factor(SOA), y = mean, fill = factor(SOA))) +
geom_bar(stat = "identity", position = "dodge", color = "black") +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = 0.2, position = position_dodge(0.9)) +
facet_grid(. ~ SOA_lock)+
labs(title = "R"^2~"of RTaud ~ ITvis",
x = "SOA",
y = "Mean R"^2~"") +
scale_fill_manual(values = c("pink","lightblue", 'lightgreen'), name = 'SOA [ms]', labels=c('0', '232', '466'))+
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(linetype = "solid"),
panel.background = element_blank())
ggplot(r2s_data, aes(x = factor(SOA), y = mean, fill = factor(SOA))) +
geom_bar(stat = "identity", position = "dodge", color = "black") +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = 0.2, position = position_dodge(0.9)) +
facet_grid(. ~ SOA_lock)+
labs(title = "R"^2~"of RTaud ~ ITvis",
x = "SOA",
y = "Mean R"^2~"") +
scale_fill_manual(values = c("pink","lightblue", 'lightgreen'), name = 'SOA [ms]', labels=c('0', '232', '466'))+
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(linetype = "solid"),
panel.background = element_blank())
?glmer
# clear workspace
rm(list = ls())
wd = 'C:/Users/micha.engeser/Documents/GitHub/Reconstructed_time_analysis'
setwd(wd)
dir()
# get package manager package
if (!('pacman' %in% installed.packages()))
{install.packages("pacman")}
library(pacman)
# install all needed packages
pacman::p_load('dplyr', 'ggdist', 'ggeffects', 'ggpubr', 'lme4', 'emmeans', 'rstatix', 'car', 'rsq', 'sjPlot', 'brms')
subNums = c(101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123)
ses = 1
Lab_ID = 'SX'
task = 'prp'
count = 0
sub_ids = NaN
for (subNum in subNums ){
count = count + 1
sub_ids[count] = paste0(Lab_ID, subNum)
sub_folder = paste0('sub-', Lab_ID, subNum)
ses_folder = paste0('ses-', ses)
file_name = paste0(sub_folder, '_', ses_folder, '_run-all_task-', task,'_events.csv')
setwd("..")
parent_dir = getwd()
setwd(wd)
file = file.path(parent_dir, 'Reconstructed_time_experiment', 'data', sub_folder, ses_folder, file_name)
event_table = read.csv(file)
# make format consistent
if ('X' %in% colnames(event_table))
{event_table$X <- NULL}
colnames(event_table)[which(names(event_table) == "has_repsonse_vis")] <- "has_response_vis"
colnames(event_table)[which(names(event_table) == "trial_repsonse_vis")] <- "trial_response_vis"
# add subject number column
event_table = event_table %>% mutate(sub_num = subNum)
# concatanate the tables
if ( exists('all_event_table')){
all_event_table = rbind(all_event_table, event_table)
} else {
all_event_table = event_table
}
}
# without exclusion
raw_event_table = all_event_table
# remove false alarm
all_event_table = all_event_table[all_event_table$trial_response_vis != 'fa', ]
# remove RT < 100 ms
all_event_table = all_event_table[all_event_table$RT_aud > 0.1, ]
# remove incorrect auditory responses
all_event_table = all_event_table[all_event_table$trial_accuracy_aud == 1, ]
# with targets
target_event_table = all_event_table
# remove target trials
all_event_table = all_event_table[all_event_table$task_relevance != 'target', ]
# remove NaNs from auditory responses
all_event_table = all_event_table[!is.na(all_event_table$trial_accuracy_aud), ]
# check if any combination of condition (cell) has less than 30 trials
task_relevance_lvl = c('non-target', 'irrelevant')
SOA_lock_lvl = c('onset', 'offset')
SOA_lvl = c(0,0.116,0.232,0.466)
duration_lvl = c(0.5,1,1.5)
sub_id_lvl = sub_ids
for (o in sub_id_lvl){
for (i in SOA_lvl){
for (ii in SOA_lock_lvl) {
for (iii in task_relevance_lvl) {
for (iv in duration_lvl) {
cell_trials = sum(all_event_table$sub_id == o & all_event_table$SOA == i & all_event_table$SOA_lock == ii & all_event_table$task_relevance == iii & all_event_table$duration == iv, na.rm = TRUE)
if(cell_trials < 30){
cell_name = paste(i,ii,iii,iv,sep= '-')
warning(paste0('Subject ',o,' has only ', cell_trials,' trials for cell: ', cell_name, '\n'))
}
}}}}}
# add log transformed column
all_event_table = all_event_table %>% mutate(log_RT_aud = log(RT_aud))
# add response window column
all_event_table = all_event_table %>% mutate(resp_window = (2-onset_SOA)+stim_jit )
# make task relevance and SOA lock numeric
all_event_table = all_event_table %>% mutate(is_task_relevant = ifelse(task_relevance == 'non-target',1,0))
all_event_table = all_event_table %>% mutate(is_onset = ifelse(SOA_lock == 'onset',1,0))
# make SOA and duration factors
all_event_table = all_event_table %>% mutate(f_SOA = factor(SOA, ordered = TRUE, levels = c("0", "0.116", "0.232", "0.466")))
all_event_table = all_event_table %>% mutate(f_duration = factor(duration, ordered = TRUE, levels = c("0.5", "1", "1.5")))
# center variables
all_event_table = all_event_table %>% mutate(c_task_relevant = is_task_relevant - mean(is_task_relevant))
all_event_table = all_event_table %>% mutate(c_is_onset = is_onset - mean(is_onset))
all_event_table = all_event_table %>% mutate(c_SOA = SOA - mean(SOA))
all_event_table = all_event_table %>% mutate(c_duration = duration - mean(duration))
all_event_table = all_event_table %>% mutate(c_pitch = (pitch-1050)/100) # makes pitches 0.5 for high and -0.5 for low
perf = data.frame(matrix(ncol = 0, nrow = 1))
perf$sub_id = "NaN"
perf$hits = NaN
perf$misses = NaN
perf$crs = NaN
perf$fas = NaN
perf$hit_rate = NaN
perf$fa_rate = NaN
perf$aud_acc = NaN
perf$RT_aud = NaN
perf = perf[-c(1), ]
for (sub_id in sub_ids) {
perf = perf %>% add_row(sub_id = sub_id,
hits = sum(raw_event_table$trial_response_vis =='hit' & raw_event_table$sub_id == sub_id),
misses = sum(raw_event_table$trial_response_vis =='miss' & raw_event_table$sub_id == sub_id),
crs = sum(raw_event_table$trial_response_vis =='cr' & raw_event_table$sub_id == sub_id),
fas = sum(raw_event_table$trial_response_vis =='fa' & raw_event_table$sub_id == sub_id),
hit_rate = hits/(hits+misses)*100,
fa_rate = fas/(fas+crs)*100,
aud_acc = mean(raw_event_table$trial_accuracy_aud[raw_event_table$sub_id == sub_id], na.rm = TRUE)*100,
RT_aud = mean(raw_event_table$RT_aud[raw_event_table$sub_id == sub_id], na.rm = TRUE)*1000)
}
perf = perf %>% add_row(sub_id = 'mean',
hits = mean(perf$hits),
misses = mean(perf$misses),
crs = mean(perf$crs),
fas = mean(perf$fas),
hit_rate = mean(perf$hit_rate),
fa_rate = mean(perf$fa_rate),
aud_acc = mean(perf$aud_acc),
RT_aud = mean(perf$RT_aud))
perf = perf %>% add_row(sub_id = 'sd',
hits = sd(perf$hits[1:10]),
misses = sd(perf$misses[1:10]),
crs = sd(perf$crs[1:10]),
fas = sd(perf$fas[1:10]),
hit_rate = sd(perf$hit_rate[1:10]),
fa_rate = sd(perf$fa_rate[1:10]),
aud_acc = sd(perf$aud_acc[1:10]),
RT_aud = sd(perf$RT_aud[1:10]))
```{R plotting}
# make duration a string
event_table2 = all_event_table
event_table2$duration = as.character(event_table2$duration)
n = length(subNums)
effect_size_table = data.frame(matrix(ncol = 0, nrow = 1))
effect_size_table$target = mean(target_event_table %>% filter(SOA == 0 & SOA_lock == 'onset' & task_relevance == 'target') %>% pull(RT_aud), na.rm = TRUE) - mean(target_event_table %>% filter(SOA == 0.466 & SOA_lock == 'offset' & task_relevance == 'target' & duration == 1.5) %>% pull(RT_aud), na.rm = TRUE)
effect_size_table$non_target_onset = mean(target_event_table %>% filter(SOA == 0 & SOA_lock == 'onset' & task_relevance == 'non-target') %>% pull(RT_aud), na.rm = TRUE) - mean(target_event_table %>% filter(SOA == 0.466 & SOA_lock == 'onset' & task_relevance == 'non-target') %>% pull(RT_aud), na.rm = TRUE)
effect_size_table$irrelevant_onset = mean(target_event_table %>% filter(SOA == 0 & SOA_lock == 'onset' & task_relevance == 'irrelevant') %>% pull(RT_aud), na.rm = TRUE) - mean(target_event_table %>% filter(SOA == 0.466 & SOA_lock == 'onset' & task_relevance == 'irrelevant') %>% pull(RT_aud), na.rm = TRUE)
effect_size_table$offset_short = mean(all_event_table %>% filter(SOA == 0 & SOA_lock == 'offset' & duration == 0.5) %>% pull(RT_aud), na.rm = TRUE) - mean(all_event_table %>% filter(SOA == 0.466 & SOA_lock == 'offset' &  duration == 0.5) %>% pull(RT_aud), na.rm = TRUE)
effect_size_table$offset_intermediate = mean(all_event_table %>% filter(SOA == 0 & SOA_lock == 'offset' & duration == 1) %>% pull(RT_aud), na.rm = TRUE) - mean(all_event_table %>% filter(SOA == 0.466 & SOA_lock == 'offset' &  duration == 1) %>% pull(RT_aud), na.rm = TRUE)
effect_size_table$offset_long = mean(all_event_table %>% filter(SOA == 0 & SOA_lock == 'offset' & duration == 1.5) %>% pull(RT_aud), na.rm = TRUE) - mean(all_event_table %>% filter(SOA == 0.466 & SOA_lock == 'offset' &  duration == 1.5) %>% pull(RT_aud), na.rm = TRUE)
View(effect_size_table)
effect_size_table = data.frame(matrix(ncol = 0, nrow = 5))
rownames(df) <- c("Mean_SOA0", "Mean_SOA466", "PRP_size", "joined_SD", "Cohensd")
effect_size_table = data.frame(matrix(ncol = 1, nrow = 5))
rownames(df) <- c("Mean_SOA0", "Mean_SOA466", "PRP_size", "joined_SD", "Cohensd")
View(effect_size_table)
effect_size_table = data.frame(matrix(ncol = 0, nrow = 5))
rownames(effect_size_table) <- c("Mean_SOA0", "Mean_SOA466", "PRP_size", "joined_SD", "Cohensd")
View(effect_size_table)
effect_size_table = data.frame(matrix(ncol = 1, nrow = 5))
rownames(effect_size_table) <- c("Mean_SOA0", "Mean_SOA466", "PRP_size", "joined_SD", "Cohensd")
View(effect_size_table)
effect_size_table = matrix(ncol = 0, nrow = 5)
effect_size_table$target = NaN
effect_size_table$non_target_onset = NaN
effect_size_table$irrelevant_onset = NaN
effect_size_table$offset_short = NaN
effect_size_table$offset_intermediate = NaN
effect_size_table$offset_long = NaN
effect_size_table =effect_size_table[-c(1), ]
effect_size_table = matrix(ncol = 0, nrow = 1)
effect_size_table$target = NaN
effect_size_table$non_target_onset = NaN
effect_size_table$irrelevant_onset = NaN
effect_size_table$offset_short = NaN
effect_size_table$offset_intermediate = NaN
effect_size_table$offset_long = NaN
effect_size_table =effect_size_table[-c(1), ]
effect_size_table = matrix(ncol = 0, nrow = 1)
effect_size_table$target = NaN
effect_size_table$non_target_onset = NaN
effect_size_table$irrelevant_onset = NaN
effect_size_table$offset_short = NaN
effect_size_table$offset_intermediate = NaN
effect_size_table$offset_long = NaN
View(effect_size_table)
effect_size_table = data.frame(matrix(ncol = 0, nrow = 1))
effect_size_table$target = NaN
effect_size_table$non_target_onset = NaN
effect_size_table$irrelevant_onset = NaN
effect_size_table$offset_short = NaN
effect_size_table$offset_intermediate = NaN
effect_size_table$offset_long = NaN
effect_size_table =effect_size_table[-c(1), ]
#rownames(effect_size_table) <- c("Mean_SOA0", "Mean_SOA466", "PRP_size", "joined_SD", "Cohensd")
effect_size_tabl = effect_size_tabl %>% add_row(target = mean(target_event_table %>% filter(SOA == 0 & SOA_lock == 'onset' & task_relevance == 'target') %>% pull(RT_aud), na.rm = TRUE),
non_target_onset = mean(target_event_table %>% filter(SOA == 0 & SOA_lock == 'onset' & task_relevance == 'non-target') %>% pull(RT_aud), na.rm = TRUE),
irrelevant_onset = mean(target_event_table %>% filter(SOA == 0 & SOA_lock == 'onset' & task_relevance == 'irrelevant') %>% pull(RT_aud), na.rm = TRUE),
offset_short = mean(all_event_table %>% filter(SOA == 0 & SOA_lock == 'offset' & duration == 0.5) %>% pull(RT_aud), na.rm = TRUE),
offset_intermediate = mean(all_event_table %>% filter(SOA == 0 & SOA_lock == 'offset' & duration == 1) %>% pull(RT_aud), na.rm = TRUE),
offset_long = mean(all_event_table %>% filter(SOA == 0 & SOA_lock == 'offset' & duration == 1.5) %>% pull(RT_aud), na.rm = TRUE), .rowname = "Mean_SOA0")
effect_size_table = data.frame(matrix(ncol = 0, nrow = 1))
effect_size_table$target = NaN
effect_size_table$non_target_onset = NaN
effect_size_table$irrelevant_onset = NaN
effect_size_table$offset_short = NaN
effect_size_table$offset_intermediate = NaN
effect_size_table$offset_long = NaN
effect_size_table =effect_size_table[-c(1), ]
#rownames(effect_size_table) <- c("Mean_SOA0", "Mean_SOA466", "PRP_size", "joined_SD", "Cohensd")
effect_size_table = effect_size_table %>% add_row(target = mean(target_event_table %>% filter(SOA == 0 & SOA_lock == 'onset' & task_relevance == 'target') %>% pull(RT_aud), na.rm = TRUE),
non_target_onset = mean(target_event_table %>% filter(SOA == 0 & SOA_lock == 'onset' & task_relevance == 'non-target') %>% pull(RT_aud), na.rm = TRUE),
irrelevant_onset = mean(target_event_table %>% filter(SOA == 0 & SOA_lock == 'onset' & task_relevance == 'irrelevant') %>% pull(RT_aud), na.rm = TRUE),
offset_short = mean(all_event_table %>% filter(SOA == 0 & SOA_lock == 'offset' & duration == 0.5) %>% pull(RT_aud), na.rm = TRUE),
offset_intermediate = mean(all_event_table %>% filter(SOA == 0 & SOA_lock == 'offset' & duration == 1) %>% pull(RT_aud), na.rm = TRUE),
offset_long = mean(all_event_table %>% filter(SOA == 0 & SOA_lock == 'offset' & duration == 1.5) %>% pull(RT_aud), na.rm = TRUE), .rowname = "Mean_SOA0")
effect_size_table = data.frame(matrix(ncol = 0, nrow = 1))
effect_size_table$target = NaN
effect_size_table$non_target_onset = NaN
effect_size_table$irrelevant_onset = NaN
effect_size_table$offset_short = NaN
effect_size_table$offset_intermediate = NaN
effect_size_table$offset_long = NaN
effect_size_table =effect_size_table[-c(1), ]
#rownames(effect_size_table) <- c("Mean_SOA0", "Mean_SOA466", "PRP_size", "joined_SD", "Cohensd")
effect_size_table = effect_size_table %>% add_row(target = mean(target_event_table %>% filter(SOA == 0 & SOA_lock == 'onset' & task_relevance == 'target') %>% pull(RT_aud), na.rm = TRUE),
non_target_onset = mean(target_event_table %>% filter(SOA == 0 & SOA_lock == 'onset' & task_relevance == 'non-target') %>% pull(RT_aud), na.rm = TRUE),
irrelevant_onset = mean(target_event_table %>% filter(SOA == 0 & SOA_lock == 'onset' & task_relevance == 'irrelevant') %>% pull(RT_aud), na.rm = TRUE),
offset_short = mean(all_event_table %>% filter(SOA == 0 & SOA_lock == 'offset' & duration == 0.5) %>% pull(RT_aud), na.rm = TRUE),
offset_intermediate = mean(all_event_table %>% filter(SOA == 0 & SOA_lock == 'offset' & duration == 1) %>% pull(RT_aud), na.rm = TRUE),
offset_long = mean(all_event_table %>% filter(SOA == 0 & SOA_lock == 'offset' & duration == 1.5) %>% pull(RT_aud), na.rm = TRUE), .name_repair = "unique", .rowname = "Mean_SOA0")
effect_size_table = data.frame(matrix(ncol = 0, nrow = 1))
effect_size_table$target = NaN
effect_size_table$non_target_onset = NaN
effect_size_table$irrelevant_onset = NaN
effect_size_table$offset_short = NaN
effect_size_table$offset_intermediate = NaN
effect_size_table$offset_long = NaN
effect_size_table =effect_size_table[-c(1), ]
#rownames(effect_size_table) <- c("Mean_SOA0", "Mean_SOA466", "PRP_size", "joined_SD", "Cohensd")
effect_size_table = effect_size_table %>% add_row(target = mean(target_event_table %>% filter(SOA == 0 & SOA_lock == 'onset' & task_relevance == 'target') %>% pull(RT_aud), na.rm = TRUE),
non_target_onset = mean(target_event_table %>% filter(SOA == 0 & SOA_lock == 'onset' & task_relevance == 'non-target') %>% pull(RT_aud), na.rm = TRUE),
irrelevant_onset = mean(target_event_table %>% filter(SOA == 0 & SOA_lock == 'onset' & task_relevance == 'irrelevant') %>% pull(RT_aud), na.rm = TRUE),
offset_short = mean(all_event_table %>% filter(SOA == 0 & SOA_lock == 'offset' & duration == 0.5) %>% pull(RT_aud), na.rm = TRUE),
offset_intermediate = mean(all_event_table %>% filter(SOA == 0 & SOA_lock == 'offset' & duration == 1) %>% pull(RT_aud), na.rm = TRUE),
offset_long = mean(all_event_table %>% filter(SOA == 0 & SOA_lock == 'offset' & duration == 1.5) %>% pull(RT_aud), na.rm = TRUE), .before = 2, .name_repair = "unique", .rowname = "Mean_SOA0")
effect_size_table = data.frame(matrix(ncol = 0, nrow = 1))
effect_size_table$target = NaN
effect_size_table$non_target_onset = NaN
effect_size_table$irrelevant_onset = NaN
effect_size_table$offset_short = NaN
effect_size_table$offset_intermediate = NaN
effect_size_table$offset_long = NaN
effect_size_table =effect_size_table[-c(1), ]
#rownames(effect_size_table) <- c("Mean_SOA0", "Mean_SOA466", "PRP_size", "joined_SD", "Cohensd")
effect_size_table = effect_size_table %>% add_row(target = mean(target_event_table %>% filter(SOA == 0 & SOA_lock == 'onset' & task_relevance == 'target') %>% pull(RT_aud), na.rm = TRUE),
non_target_onset = mean(target_event_table %>% filter(SOA == 0 & SOA_lock == 'onset' & task_relevance == 'non-target') %>% pull(RT_aud), na.rm = TRUE),
irrelevant_onset = mean(target_event_table %>% filter(SOA == 0 & SOA_lock == 'onset' & task_relevance == 'irrelevant') %>% pull(RT_aud), na.rm = TRUE),
offset_short = mean(all_event_table %>% filter(SOA == 0 & SOA_lock == 'offset' & duration == 0.5) %>% pull(RT_aud), na.rm = TRUE),
offset_intermediate = mean(all_event_table %>% filter(SOA == 0 & SOA_lock == 'offset' & duration == 1) %>% pull(RT_aud), na.rm = TRUE),
offset_long = mean(all_event_table %>% filter(SOA == 0 & SOA_lock == 'offset' & duration == 1.5) %>% pull(RT_aud), na.rm = TRUE))
View(effect_size_table)
effect_size_table = data.frame(matrix(ncol = 0, nrow = 1))
effect_size_table$target = NaN
effect_size_table$non_target_onset = NaN
effect_size_table$irrelevant_onset = NaN
effect_size_table$offset_short = NaN
effect_size_table$offset_intermediate = NaN
effect_size_table$offset_long = NaN
effect_size_table =effect_size_table[-c(1), ]
#rownames(effect_size_table) <- c("Mean_SOA0", "Mean_SOA466", "PRP_size", "joined_SD", "Cohensd")
effect_size_table = effect_size_table %>% add_row(target = mean(target_event_table %>% filter(SOA == 0 & SOA_lock == 'onset' & task_relevance == 'target') %>% pull(RT_aud), na.rm = TRUE),
non_target_onset = mean(target_event_table %>% filter(SOA == 0 & SOA_lock == 'onset' & task_relevance == 'non-target') %>% pull(RT_aud), na.rm = TRUE),
irrelevant_onset = mean(target_event_table %>% filter(SOA == 0 & SOA_lock == 'onset' & task_relevance == 'irrelevant') %>% pull(RT_aud), na.rm = TRUE),
offset_short = mean(all_event_table %>% filter(SOA == 0 & SOA_lock == 'offset' & duration == 0.5) %>% pull(RT_aud), na.rm = TRUE),
offset_intermediate = mean(all_event_table %>% filter(SOA == 0 & SOA_lock == 'offset' & duration == 1) %>% pull(RT_aud), na.rm = TRUE),
offset_long = mean(all_event_table %>% filter(SOA == 0 & SOA_lock == 'offset' & duration == 1.5) %>% pull(RT_aud), na.rm = TRUE))
effect_size_table = effect_size_table %>% add_row(target = mean(target_event_table %>% filter(SOA == 0.466 & SOA_lock == 'offset' & task_relevance == 'target' & duration == 1.5) %>% pull(RT_aud), na.rm = TRUE),
non_target_onset = mean(target_event_table %>% filter(SOA == 0.466 & SOA_lock == 'onset' & task_relevance == 'non-target') %>% pull(RT_aud), na.rm = TRUE),
irrelevant_onset = mean(target_event_table %>% filter(SOA == 0.466 & SOA_lock == 'onset' & task_relevance == 'irrelevant') %>% pull(RT_aud), na.rm = TRUE),
offset_short = mean(all_event_table %>% filter(SOA == 0.466 & SOA_lock == 'offset' &  duration == 0.5) %>% pull(RT_aud), na.rm = TRUE),
offset_intermediate = mean(all_event_table %>% filter(SOA == 0.466 & SOA_lock == 'offset' &  duration == 1) %>% pull(RT_aud), na.rm = TRUE),
offset_long = mean(all_event_table %>% filter(SOA == 0.466 & SOA_lock == 'offset' &  duration == 1.5) %>% pull(RT_aud), na.rm = TRUE))
?add_row
effect_size_table = data.frame(matrix(ncol = 0, nrow = 1))
effect_size_table$target = NaN
effect_size_table$non_target_onset = NaN
effect_size_table$irrelevant_onset = NaN
effect_size_table$offset_short = NaN
effect_size_table$offset_intermediate = NaN
effect_size_table$offset_long = NaN
effect_size_table =effect_size_table[-c(1), ]
#rownames(effect_size_table) <- c("Mean_SOA0", "Mean_SOA466", "PRP_size", "joined_SD", "Cohensd")
effect_size_table = effect_size_table %>% add_row(target = mean(target_event_table %>% filter(SOA == 0 & SOA_lock == 'onset' & task_relevance == 'target') %>% pull(RT_aud), na.rm = TRUE),
non_target_onset = mean(target_event_table %>% filter(SOA == 0 & SOA_lock == 'onset' & task_relevance == 'non-target') %>% pull(RT_aud), na.rm = TRUE),
irrelevant_onset = mean(target_event_table %>% filter(SOA == 0 & SOA_lock == 'onset' & task_relevance == 'irrelevant') %>% pull(RT_aud), na.rm = TRUE),
offset_short = mean(all_event_table %>% filter(SOA == 0 & SOA_lock == 'offset' & duration == 0.5) %>% pull(RT_aud), na.rm = TRUE),
offset_intermediate = mean(all_event_table %>% filter(SOA == 0 & SOA_lock == 'offset' & duration == 1) %>% pull(RT_aud), na.rm = TRUE),
offset_long = mean(all_event_table %>% filter(SOA == 0 & SOA_lock == 'offset' & duration == 1.5) %>% pull(RT_aud), na.rm = TRUE))
effect_size_table = effect_size_table %>% add_row(target = mean(target_event_table %>% filter(SOA == 0.466 & SOA_lock == 'offset' & task_relevance == 'target' & duration == 1.5) %>% pull(RT_aud), na.rm = TRUE),
non_target_onset = mean(target_event_table %>% filter(SOA == 0.466 & SOA_lock == 'onset' & task_relevance == 'non-target') %>% pull(RT_aud), na.rm = TRUE),
irrelevant_onset = mean(target_event_table %>% filter(SOA == 0.466 & SOA_lock == 'onset' & task_relevance == 'irrelevant') %>% pull(RT_aud), na.rm = TRUE),
offset_short = mean(all_event_table %>% filter(SOA == 0.466 & SOA_lock == 'offset' &  duration == 0.5) %>% pull(RT_aud), na.rm = TRUE),
offset_intermediate = mean(all_event_table %>% filter(SOA == 0.466 & SOA_lock == 'offset' &  duration == 1) %>% pull(RT_aud), na.rm = TRUE),
offset_long = mean(all_event_table %>% filter(SOA == 0.466 & SOA_lock == 'offset' &  duration == 1.5) %>% pull(RT_aud), na.rm = TRUE))
effect_size_table = matrix(ncol = 6, nrow = 5)
rownames(effect_size_table) <- c("Mean_SOA0", "Mean_SOA466", "PRP_size", "joined_SD", "Cohensd")
colnames(effect_size_table) <- c("target", "non_target_onset", "irrelevant_onset", "offset_short", "offset_intermediate", "offset_long")
rownames(effect_size_table) = c("Mean_SOA0", "Mean_SOA466", "PRP_size", "joined_SD", "Cohensd")
suppressMessages(rownames(effect_size_table) = c("Mean_SOA0", "Mean_SOA466", "PRP_size", "joined_SD", "Cohensd"))
suppressMessages(rownames(effect_size_table) <- c("Mean_SOA0", "Mean_SOA466", "PRP_size", "joined_SD", "Cohensd"))
effect_size_table = matrix(ncol = 6, nrow = 5)
effect_size_table = data.frame(matrix(ncol = 0, nrow = 1))
offset_event_table = all_event_table %>% filter(SOA_lock == "offset")
perf = data.frame(matrix(ncol = 0, nrow = 1))
perf$sub_id = "NaN"
perf$hits = NaN
perf$misses = NaN
perf$crs = NaN
perf$fas = NaN
perf$hit_rate = NaN
perf$fa_rate = NaN
perf$aud_acc = NaN
perf$RT_aud = NaN
perf = perf[-c(1), ]
