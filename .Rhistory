all_data$SOA[counter] = i
all_data$mean_RT[counter] = mean(event_table$RT_aud[event_table$SOA == i])
all_data$sd_RT[counter] = sd(event_table$RT_aud[event_table$SOA == i])
for (ii in SOA_lock_lvl) {
counter = counter + 1
all_data$SOA[counter] = i
all_data$SOA_lock[counter] = ii
all_data$mean_RT[counter] = mean(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii])
all_data$sd_RT[counter] = sd(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii])
for (iii in task_relevance_lvl) {
counter = counter + 1
all_data$SOA[counter] = i
all_data$SOA_lock[counter] = ii
all_data$task_relevance[counter] = iii
all_data$mean_RT[counter] = mean(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii & event_table$task_relevance == iii])
all_data$sd_RT[counter] = sd(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii & event_table$task_relevance == iii])
for (iv in duration_lvl) {
counter = counter + 1
all_data$SOA[counter] = i
all_data$SOA_lock[counter] = ii
all_data$task_relevance[counter] = iii
all_data$duration[counter] = iv
all_data$mean_RT[counter] = mean(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii & event_table$task_relevance == iii & event_table$duration == iv])
all_data$sd_RT[counter] = sd(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii & event_table$task_relevance == iii & event_table$duration == iv])
}}}}
4*2*2*3
RT_aud_mean = mean(event_table$RT_aud)
# split by SOA, SOA_lock and task relevance
task_relevance_lvl = c('non-target', 'irrelevant')
SOA_lock_lvl = c('onset', 'offset')
SOA_lvl = c(0,0.116,0.232,0.466)
duration_lvl = c(0.5,1,1.5)
# all task relevance
all_data = data.frame(matrix(ncol = 0, nrow = 1000))
counter = 0
for (i in SOA_lvl){
counter = counter + 1
all_data$SOA[counter] = i
all_data$mean_RT[counter] = mean(event_table$RT_aud[event_table$SOA == i])
all_data$sd_RT[counter] = sd(event_table$RT_aud[event_table$SOA == i])
for (ii in SOA_lock_lvl) {
counter = counter + 1
all_data$SOA[counter] = i
all_data$SOA_lock[counter] = ii
all_data$mean_RT[counter] = mean(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii])
all_data$sd_RT[counter] = sd(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii])
for (iii in task_relevance_lvl) {
counter = counter + 1
all_data$SOA[counter] = i
all_data$SOA_lock[counter] = ii
all_data$task_relevance[counter] = iii
all_data$mean_RT[counter] = mean(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii & event_table$task_relevance == iii])
all_data$sd_RT[counter] = sd(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii & event_table$task_relevance == iii])
for (iv in duration_lvl) {
counter = counter + 1
all_data$SOA[counter] = i
all_data$SOA_lock[counter] = ii
all_data$task_relevance[counter] = iii
all_data$duration[counter] = iv
all_data$mean_RT[counter] = mean(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii & event_table$task_relevance == iii & event_table$duration == iv])
all_data$sd_RT[counter] = sd(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii & event_table$task_relevance == iii & event_table$duration == iv])
}}}}
RT_aud_mean = mean(event_table$RT_aud)
# split by SOA, SOA_lock and task relevance
task_relevance_lvl = c('non-target', 'irrelevant')
SOA_lock_lvl = c('onset', 'offset')
SOA_lvl = c(0,0.116,0.232,0.466)
duration_lvl = c(0.5,1,1.5)
# all task relevance
all_data = data.frame(matrix(ncol = 0, nrow = 100))
counter = 0
for (i in SOA_lvl){
counter = counter + 1
all_data$SOA[counter] = i
all_data$mean_RT[counter] = mean(event_table$RT_aud[event_table$SOA == i])
all_data$sd_RT[counter] = sd(event_table$RT_aud[event_table$SOA == i])
for (ii in SOA_lock_lvl) {
counter = counter + 1
all_data$SOA[counter] = i
all_data$SOA_lock[counter] = ii
all_data$mean_RT[counter] = mean(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii])
all_data$sd_RT[counter] = sd(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii])
for (iii in task_relevance_lvl) {
counter = counter + 1
all_data$SOA[counter] = i
all_data$SOA_lock[counter] = ii
all_data$task_relevance[counter] = iii
all_data$mean_RT[counter] = mean(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii & event_table$task_relevance == iii])
all_data$sd_RT[counter] = sd(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii & event_table$task_relevance == iii])
for (iv in duration_lvl) {
counter = counter + 1
all_data$SOA[counter] = i
all_data$SOA_lock[counter] = ii
all_data$task_relevance[counter] = iii
all_data$duration[counter] = iv
all_data$mean_RT[counter] = mean(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii & event_table$task_relevance == iii & event_table$duration == iv])
all_data$sd_RT[counter] = sd(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii & event_table$task_relevance == iii & event_table$duration == iv])
}}}}
RT_aud_mean = mean(event_table$RT_aud)
# split by SOA, SOA_lock and task relevance
task_relevance_lvl = c('non-target', 'irrelevant')
SOA_lock_lvl = c('onset', 'offset')
SOA_lvl = c(0,0.116,0.232,0.466)
duration_lvl = c(0.5,1,1.5)
# all task relevance
all_data = data.frame(matrix(ncol = 0, nrow = 4*2*2*3))
counter = 0
for (i in SOA_lvl){
counter = counter + 1
all_data$SOA[counter] = i
all_data$mean_RT[counter] = mean(event_table$RT_aud[event_table$SOA == i])
all_data$sd_RT[counter] = sd(event_table$RT_aud[event_table$SOA == i])
for (ii in SOA_lock_lvl) {
counter = counter + 1
all_data$SOA[counter] = i
all_data$SOA_lock[counter] = ii
all_data$mean_RT[counter] = mean(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii])
all_data$sd_RT[counter] = sd(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii])
for (iii in task_relevance_lvl) {
counter = counter + 1
all_data$SOA[counter] = i
all_data$SOA_lock[counter] = ii
all_data$task_relevance[counter] = iii
all_data$mean_RT[counter] = mean(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii & event_table$task_relevance == iii])
all_data$sd_RT[counter] = sd(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii & event_table$task_relevance == iii])
for (iv in duration_lvl) {
counter = counter + 1
all_data$SOA[counter] = i
all_data$SOA_lock[counter] = ii
all_data$task_relevance[counter] = iii
all_data$duration[counter] = iv
all_data$mean_RT[counter] = mean(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii & event_table$task_relevance == iii & event_table$duration == iv])
all_data$sd_RT[counter] = sd(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii & event_table$task_relevance == iii & event_table$duration == iv])
}}}}
RT_aud_mean = mean(event_table$RT_aud)
# split by SOA, SOA_lock and task relevance
task_relevance_lvl = c('non-target', 'irrelevant')
SOA_lock_lvl = c('onset', 'offset')
SOA_lvl = c(0,0.116,0.232,0.466)
duration_lvl = c(0.5,1,1.5)
# all task relevance
all_data = data.frame(matrix(ncol = 0, nrow = 60))
counter = 0
for (i in SOA_lvl){
counter = counter + 1
all_data$SOA[counter] = i
all_data$mean_RT[counter] = mean(event_table$RT_aud[event_table$SOA == i])
all_data$sd_RT[counter] = sd(event_table$RT_aud[event_table$SOA == i])
for (ii in SOA_lock_lvl) {
counter = counter + 1
all_data$SOA[counter] = i
all_data$SOA_lock[counter] = ii
all_data$mean_RT[counter] = mean(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii])
all_data$sd_RT[counter] = sd(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii])
for (iii in task_relevance_lvl) {
counter = counter + 1
all_data$SOA[counter] = i
all_data$SOA_lock[counter] = ii
all_data$task_relevance[counter] = iii
all_data$mean_RT[counter] = mean(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii & event_table$task_relevance == iii])
all_data$sd_RT[counter] = sd(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii & event_table$task_relevance == iii])
for (iv in duration_lvl) {
counter = counter + 1
all_data$SOA[counter] = i
all_data$SOA_lock[counter] = ii
all_data$task_relevance[counter] = iii
all_data$duration[counter] = iv
all_data$mean_RT[counter] = mean(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii & event_table$task_relevance == iii & event_table$duration == iv])
all_data$sd_RT[counter] = sd(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii & event_table$task_relevance == iii & event_table$duration == iv])
}}}}
RT_aud_mean = mean(event_table$RT_aud)
# split by SOA, SOA_lock and task relevance
task_relevance_lvl = c('non-target', 'irrelevant')
SOA_lock_lvl = c('onset', 'offset')
SOA_lvl = c(0,0.116,0.232,0.466)
duration_lvl = c(0.5,1,1.5)
# all task relevance
all_data = data.frame(matrix(ncol = 0, nrow = 70))
counter = 0
for (i in SOA_lvl){
counter = counter + 1
all_data$SOA[counter] = i
all_data$mean_RT[counter] = mean(event_table$RT_aud[event_table$SOA == i])
all_data$sd_RT[counter] = sd(event_table$RT_aud[event_table$SOA == i])
for (ii in SOA_lock_lvl) {
counter = counter + 1
all_data$SOA[counter] = i
all_data$SOA_lock[counter] = ii
all_data$mean_RT[counter] = mean(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii])
all_data$sd_RT[counter] = sd(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii])
for (iii in task_relevance_lvl) {
counter = counter + 1
all_data$SOA[counter] = i
all_data$SOA_lock[counter] = ii
all_data$task_relevance[counter] = iii
all_data$mean_RT[counter] = mean(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii & event_table$task_relevance == iii])
all_data$sd_RT[counter] = sd(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii & event_table$task_relevance == iii])
for (iv in duration_lvl) {
counter = counter + 1
all_data$SOA[counter] = i
all_data$SOA_lock[counter] = ii
all_data$task_relevance[counter] = iii
all_data$duration[counter] = iv
all_data$mean_RT[counter] = mean(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii & event_table$task_relevance == iii & event_table$duration == iv])
all_data$sd_RT[counter] = sd(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii & event_table$task_relevance == iii & event_table$duration == iv])
}}}}
RT_aud_mean = mean(event_table$RT_aud)
# split by SOA, SOA_lock and task relevance
task_relevance_lvl = c('non-target', 'irrelevant')
SOA_lock_lvl = c('onset', 'offset')
SOA_lvl = c(0,0.116,0.232,0.466)
duration_lvl = c(0.5,1,1.5)
# all task relevance
all_data = data.frame(matrix(ncol = 0, nrow = 68))
counter = 0
for (i in SOA_lvl){
counter = counter + 1
all_data$SOA[counter] = i
all_data$mean_RT[counter] = mean(event_table$RT_aud[event_table$SOA == i])
all_data$sd_RT[counter] = sd(event_table$RT_aud[event_table$SOA == i])
for (ii in SOA_lock_lvl) {
counter = counter + 1
all_data$SOA[counter] = i
all_data$SOA_lock[counter] = ii
all_data$mean_RT[counter] = mean(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii])
all_data$sd_RT[counter] = sd(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii])
for (iii in task_relevance_lvl) {
counter = counter + 1
all_data$SOA[counter] = i
all_data$SOA_lock[counter] = ii
all_data$task_relevance[counter] = iii
all_data$mean_RT[counter] = mean(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii & event_table$task_relevance == iii])
all_data$sd_RT[counter] = sd(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii & event_table$task_relevance == iii])
for (iv in duration_lvl) {
counter = counter + 1
all_data$SOA[counter] = i
all_data$SOA_lock[counter] = ii
all_data$task_relevance[counter] = iii
all_data$duration[counter] = iv
all_data$mean_RT[counter] = mean(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii & event_table$task_relevance == iii & event_table$duration == iv])
all_data$sd_RT[counter] = sd(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii & event_table$task_relevance == iii & event_table$duration == iv])
}}}}
RT_aud_mean = mean(event_table$RT_aud)
# split by SOA, SOA_lock and task relevance
task_relevance_lvl = c('non-target', 'irrelevant')
SOA_lock_lvl = c('onset', 'offset')
SOA_lvl = c(0,0.116,0.232,0.466)
duration_lvl = c(0.5,1,1.5)
# all task relevance
all_data = data.frame(matrix(ncol = 0, nrow = 60))
counter = 0
for (i in SOA_lvl){
counter = counter + 1
all_data$SOA[counter] = i
all_data$mean_RT[counter] = mean(event_table$RT_aud[event_table$SOA == i])
all_data$sd_RT[counter] = sd(event_table$RT_aud[event_table$SOA == i])
for (ii in SOA_lock_lvl) {
counter = counter + 1
all_data$SOA[counter] = i
all_data$SOA_lock[counter] = ii
all_data$mean_RT[counter] = mean(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii])
all_data$sd_RT[counter] = sd(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii])
for (iii in task_relevance_lvl) {
counter = counter + 1
all_data$SOA[counter] = i
all_data$SOA_lock[counter] = ii
all_data$task_relevance[counter] = iii
all_data$mean_RT[counter] = mean(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii & event_table$task_relevance == iii])
all_data$sd_RT[counter] = sd(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii & event_table$task_relevance == iii])
for (iv in duration_lvl) {
counter = counter + 1
all_data$SOA[counter] = i
all_data$SOA_lock[counter] = ii
all_data$task_relevance[counter] = iii
all_data$duration[counter] = iv
all_data$mean_RT[counter] = mean(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii & event_table$task_relevance == iii & event_table$duration == iv])
all_data$sd_RT[counter] = sd(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii & event_table$task_relevance == iii & event_table$duration == iv])
}}}}
RT_aud_mean = mean(event_table$RT_aud)
# split by SOA, SOA_lock and task relevance
task_relevance_lvl = c('non-target', 'irrelevant')
SOA_lock_lvl = c('onset', 'offset')
SOA_lvl = c(0,0.116,0.232,0.466)
duration_lvl = c(0.5,1,1.5)
# all task relevance
all_data = data.frame(matrix(ncol = 0, nrow = 62))
counter = 0
for (i in SOA_lvl){
counter = counter + 1
all_data$SOA[counter] = i
all_data$mean_RT[counter] = mean(event_table$RT_aud[event_table$SOA == i])
all_data$sd_RT[counter] = sd(event_table$RT_aud[event_table$SOA == i])
for (ii in SOA_lock_lvl) {
counter = counter + 1
all_data$SOA[counter] = i
all_data$SOA_lock[counter] = ii
all_data$mean_RT[counter] = mean(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii])
all_data$sd_RT[counter] = sd(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii])
for (iii in task_relevance_lvl) {
counter = counter + 1
all_data$SOA[counter] = i
all_data$SOA_lock[counter] = ii
all_data$task_relevance[counter] = iii
all_data$mean_RT[counter] = mean(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii & event_table$task_relevance == iii])
all_data$sd_RT[counter] = sd(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii & event_table$task_relevance == iii])
for (iv in duration_lvl) {
counter = counter + 1
all_data$SOA[counter] = i
all_data$SOA_lock[counter] = ii
all_data$task_relevance[counter] = iii
all_data$duration[counter] = iv
all_data$mean_RT[counter] = mean(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii & event_table$task_relevance == iii & event_table$duration == iv])
all_data$sd_RT[counter] = sd(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii & event_table$task_relevance == iii & event_table$duration == iv])
}}}}
RT_aud_mean = mean(event_table$RT_aud)
# split by SOA, SOA_lock and task relevance
task_relevance_lvl = c('non-target', 'irrelevant')
SOA_lock_lvl = c('onset', 'offset')
SOA_lvl = c(0,0.116,0.232,0.466)
duration_lvl = c(0.5,1,1.5)
# all task relevance
all_data = data.frame(matrix(ncol = 0, nrow = 61))
counter = 0
for (i in SOA_lvl){
counter = counter + 1
all_data$SOA[counter] = i
all_data$mean_RT[counter] = mean(event_table$RT_aud[event_table$SOA == i])
all_data$sd_RT[counter] = sd(event_table$RT_aud[event_table$SOA == i])
for (ii in SOA_lock_lvl) {
counter = counter + 1
all_data$SOA[counter] = i
all_data$SOA_lock[counter] = ii
all_data$mean_RT[counter] = mean(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii])
all_data$sd_RT[counter] = sd(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii])
for (iii in task_relevance_lvl) {
counter = counter + 1
all_data$SOA[counter] = i
all_data$SOA_lock[counter] = ii
all_data$task_relevance[counter] = iii
all_data$mean_RT[counter] = mean(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii & event_table$task_relevance == iii])
all_data$sd_RT[counter] = sd(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii & event_table$task_relevance == iii])
for (iv in duration_lvl) {
counter = counter + 1
all_data$SOA[counter] = i
all_data$SOA_lock[counter] = ii
all_data$task_relevance[counter] = iii
all_data$duration[counter] = iv
all_data$mean_RT[counter] = mean(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii & event_table$task_relevance == iii & event_table$duration == iv])
all_data$sd_RT[counter] = sd(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii & event_table$task_relevance == iii & event_table$duration == iv])
}}}}
RT_aud_mean = mean(event_table$RT_aud)
# split by SOA, SOA_lock and task relevance
task_relevance_lvl = c('non-target', 'irrelevant')
SOA_lock_lvl = c('onset', 'offset')
SOA_lvl = c(0,0.116,0.232,0.466)
duration_lvl = c(0.5,1,1.5)
# all task relevance
all_data = data.frame(matrix(ncol = 0, nrow = 60))
counter = 0
for (i in SOA_lvl){
counter = counter + 1
all_data$SOA[counter] = i
all_data$mean_RT[counter] = mean(event_table$RT_aud[event_table$SOA == i])
all_data$sd_RT[counter] = sd(event_table$RT_aud[event_table$SOA == i])
for (ii in SOA_lock_lvl) {
counter = counter + 1
all_data$SOA[counter] = i
all_data$SOA_lock[counter] = ii
all_data$mean_RT[counter] = mean(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii])
all_data$sd_RT[counter] = sd(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii])
for (iii in task_relevance_lvl) {
counter = counter + 1
all_data$SOA[counter] = i
all_data$SOA_lock[counter] = ii
all_data$task_relevance[counter] = iii
all_data$mean_RT[counter] = mean(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii & event_table$task_relevance == iii])
all_data$sd_RT[counter] = sd(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii & event_table$task_relevance == iii])
for (iv in duration_lvl) {
counter = counter + 1
all_data$SOA[counter] = i
all_data$SOA_lock[counter] = ii
all_data$task_relevance[counter] = iii
all_data$duration[counter] = iv
all_data$mean_RT[counter] = mean(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii & event_table$task_relevance == iii & event_table$duration == iv])
all_data$sd_RT[counter] = sd(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii & event_table$task_relevance == iii & event_table$duration == iv])
}}}}
RT_aud_mean = mean(event_table$RT_aud)
# split by SOA, SOA_lock and task relevance
task_relevance_lvl = c('non-target', 'irrelevant')
SOA_lock_lvl = c('onset', 'offset')
SOA_lvl = c(0,0.116,0.232,0.466)
duration_lvl = c(0.5,1,1.5)
# all task relevance
all_data = data.frame(matrix(ncol = 0, nrow = 0))
counter = 0
for (i in SOA_lvl){
counter = counter + 1
all_data[nrow(all_data) + 1,]
all_data$SOA[counter] = i
all_data$mean_RT[counter] = mean(event_table$RT_aud[event_table$SOA == i])
all_data$sd_RT[counter] = sd(event_table$RT_aud[event_table$SOA == i])
for (ii in SOA_lock_lvl) {
counter = counter + 1
all_data[nrow(all_data) + 1,]
all_data$SOA[counter] = i
all_data$SOA_lock[counter] = ii
all_data$mean_RT[counter] = mean(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii])
all_data$sd_RT[counter] = sd(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii])
for (iii in task_relevance_lvl) {
counter = counter + 1
all_data[nrow(all_data) + 1,]
all_data$SOA[counter] = i
all_data$SOA_lock[counter] = ii
all_data$task_relevance[counter] = iii
all_data$mean_RT[counter] = mean(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii & event_table$task_relevance == iii])
all_data$sd_RT[counter] = sd(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii & event_table$task_relevance == iii])
for (iv in duration_lvl) {
counter = counter + 1
all_data[nrow(all_data) + 1,]
all_data$SOA[counter] = i
all_data$SOA_lock[counter] = ii
all_data$task_relevance[counter] = iii
all_data$duration[counter] = iv
all_data$mean_RT[counter] = mean(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii & event_table$task_relevance == iii & event_table$duration == iv])
all_data$sd_RT[counter] = sd(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii & event_table$task_relevance == iii & event_table$duration == iv])
}}}}
RT_aud_mean = mean(event_table$RT_aud)
# split by SOA, SOA_lock and task relevance
task_relevance_lvl = c('non-target', 'irrelevant')
SOA_lock_lvl = c('onset', 'offset')
SOA_lvl = c(0,0.116,0.232,0.466)
duration_lvl = c(0.5,1,1.5)
# all task relevance
all_data = data.frame(matrix(ncol = 0, nrow = 1))
counter = 0
for (i in SOA_lvl){
counter = counter + 1
all_data[nrow(all_data) + 1,]
all_data$SOA[counter] = i
all_data$mean_RT[counter] = mean(event_table$RT_aud[event_table$SOA == i])
all_data$sd_RT[counter] = sd(event_table$RT_aud[event_table$SOA == i])
for (ii in SOA_lock_lvl) {
counter = counter + 1
all_data[nrow(all_data) + 1,]
all_data$SOA[counter] = i
all_data$SOA_lock[counter] = ii
all_data$mean_RT[counter] = mean(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii])
all_data$sd_RT[counter] = sd(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii])
for (iii in task_relevance_lvl) {
counter = counter + 1
all_data[nrow(all_data) + 1,]
all_data$SOA[counter] = i
all_data$SOA_lock[counter] = ii
all_data$task_relevance[counter] = iii
all_data$mean_RT[counter] = mean(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii & event_table$task_relevance == iii])
all_data$sd_RT[counter] = sd(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii & event_table$task_relevance == iii])
for (iv in duration_lvl) {
counter = counter + 1
all_data[nrow(all_data) + 1,]
all_data$SOA[counter] = i
all_data$SOA_lock[counter] = ii
all_data$task_relevance[counter] = iii
all_data$duration[counter] = iv
all_data$mean_RT[counter] = mean(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii & event_table$task_relevance == iii & event_table$duration == iv])
all_data$sd_RT[counter] = sd(event_table$RT_aud[event_table$SOA == i & event_table$SOA_lock == ii & event_table$task_relevance == iii & event_table$duration == iv])
}}}}
all_data = data.frame(matrix(ncol = 0, nrow = 1))
all_data[nrow(all_data) + 1,]
all_data = all_data[nrow(all_data) + 1,]
all_data %>% add_row(SOA = i, mean_RT = mean(event_table$RT_aud[event_table$SOA == i]),sd = sd(event_table$RT_aud[event_table$SOA == i]))
all_data$SOA = nan
all_data$SOA = NaN
View(all_data)
all_data = data.frame(matrix(ncol = 0, nrow = 1))
all_data$SOA = NaN
all_data$SOA_lock = NaN
all_data$task_relevance = NaN
all_data$duration = NaN
all_data$mean_RT = NaN
all_data$sd_RT = NaN
all_data$SOA[counter] = i
all_data %>% add_row(SOA = i, mean_RT = mean(event_table$RT_aud[event_table$SOA == i]),sd = sd(event_table$RT_aud[event_table$SOA == i]))
all_data %>% add_row(SOA = i, mean_RT = mean(event_table$RT_aud[event_table$SOA == i]),sd = sd_RT(event_table$RT_aud[event_table$SOA == i]))
all_data %>% add_row(SOA = i, mean_RT = mean(event_table$RT_aud[event_table$SOA == i]),sd_RT = sd(event_table$RT_aud[event_table$SOA == i]))
View(all_data)
all_data %>% add_row(SOA = i, mean_RT = mean(event_table$RT_aud[event_table$SOA == i]),sd_RT = sd(event_table$RT_aud[event_table$SOA == i]))
all_data = data.frame(matrix(ncol = 0, nrow = 0)
)
all_data$SOA
View(all_data)
View(all_data)
all_data$SOA
all_data %>% mutate(type))
all_data %>% mutate(type)
all_data %>% mutate(type = NaN)
View(all_data)
all_data %>% mutate(type = NaN)
View(all_data)
View(all_data)
all_data$SOA = NaN
all_data = data.frame(matrix(ncol = 0, nrow = 0))
all_data$SOA = NaN
all_data = data.frame(matrix(ncol = 0, nrow = 1))
all_data$SOA = NaN
all_data$SOA_lock = NaN
all_data$task_relevance = NaN
all_data$duration = NaN
all_data$mean_RT = NaN
all_data$sd_RT = NaN
all_data[-c(1), ]
View(all_data)
all_data[-c(1), ]
